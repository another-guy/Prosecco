{
  "name": "Prosecco",
  "tagline": "Simplifies SQL database querying a bit",
  "body": "ï»¿## Synopsis\r\n\r\nSimplifies SQL database querying a bit\r\n\r\n## Code Example\r\n\r\nSqlClient creation:\r\n\r\n```cs\r\nvar sqlClient = new SqlClient(regularConnectionString);\r\n```\r\n\r\nExecuteNonQueryAsync:\r\n```cs\r\nvar rowsAffected = await sqlClient.ExecuteNonQueryAsync(\r\n\t\"INSERT INTO dbo.Users (Username) VALUES (@username)\",\r\n\tnew Dictionary<string, object>\r\n\t{\r\n\t\t{ \"@username\", \"Vasile Pupkeanu\" }\r\n\t});\r\n```\r\n\r\nExecuteReaderAsync:\r\n```cs\r\nvar userList = await sql.ExecuteReaderAsync(\r\n\t\"SELECT Id, Username FROM dbo.Task WHERE Id = @id\",\r\n\tnew Dictionary<string, object>\r\n\t{\r\n\t\t{ \"@id\", userId },\r\n\t},\r\n\treader =>\r\n\t{\r\n\t\tvar result = new List<User>();\r\n\t\twhile (reader.Read())\r\n\t\t{\r\n\t\t\tresult.Add(new User\r\n\t\t\t{\r\n\t\t\t\tId = reader.GetString(0),\r\n\t\t\t\tUsername = reader.GetString(1)\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t});\r\n```\r\n\r\nExecuteScalarAsync:\r\n```cs\r\nvar userName = await sql.ExecuteScalarAsync(\r\n\t\"SELECT Name FROM dbo.Task WHERE Id = @id\",\r\n\tnew Dictionary<string, object>\r\n\t{\r\n\t\t{ \"@id\", userId },\r\n\t});\r\n```\r\n\r\nExecuteXmlReaderAsync:\r\n```cs\r\nvar userList = await sql.ExecuteXmlReaderAsync(\r\n\t\"SELECT Id, Username FROM dbo.Task WHERE Id = @id\",\r\n\tnew Dictionary<string, object>\r\n\t{\r\n\t\t{ \"@id\", userId },\r\n\t},\r\n\txmlReader =>\r\n\t{\r\n\t\tvar result = new List<User>();\r\n\t\t\r\n\t\t// populate result object from the xmlReader\r\n\r\n\t\treturn result;\r\n\t});\r\n```\r\n\r\n## Motivation\r\n\r\nSyntax sugar is syntax sugar: it's not a necessary thing per se but it can improve code quality.\r\n\r\n## Installation\r\n\r\nProsecco is a available in a form of a NuGet package.\r\nFollow regular installation process to bring it to your project.\r\nhttps://www.nuget.org/packages/Prosecco/\r\n\r\n## Tests\r\n\r\nUnit tests are available in Prosecco.Tests project.\r\n\r\n## License\r\n\r\nThe code is distributed under the MIT license.\r\n\r\n## Contributing\r\n\r\nContribution is the best way to improve any project!\r\n\r\n1. Fork it!\r\n2. Create your feature branch (```git checkout -b my-new-feature```).\r\n3. Commit your changes (```git commit -am 'Added some feature'```)\r\n4. Push to the branch (```git push origin my-new-feature```)\r\n5. Create new Pull Request\r\n\r\n...or follow steps described in a nice [fork guide](http://kbroman.org/github_tutorial/pages/fork.html) by Karl Broman\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}